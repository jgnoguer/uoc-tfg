# A default broker
apiVersion: eventing.knative.dev/v1
kind: Broker
metadata:
  name: image-broker
  namespace: default
  annotations:
    # Note: you can set the eventing.knative.dev/broker.class annotation to change the class of the broker.
    # The default broker class is MTChannelBasedBroker, but Knative also supports use of the other class.
    eventing.knative.dev/broker.class: MTChannelBasedBroker
spec: {}
---
# Helloworld-go app deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: watermark
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      app: watermark
  template:
    metadata:
      labels: *labels
    spec:
      containers:
        - name: watermark
          image: ghcr.io/jgnoguer/watermark:0.1.0
---
# Service that exposes watermark app.
# This will be the subscriber for the Trigger
apiVersion: v1
kind: Service
metadata:
  name: watermark
  namespace: default
spec:
  selector:
    app: watermark
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
# Knative Eventing Trigger to trigger the watermark service
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: watermark
  namespace: default
spec:
  broker: image-broker
  filter:
    attributes:
      type: dev.jgnoguer.knative.uoc.imageadded
      source: dev.jgnoguer.knative.uoc/mediastorage-service
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: watermark

